{"version":3,"sources":["./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/environments/environment.ts","./src/app/employee-data.service.ts","./src/app/demo2/demo2.component.html","./src/app/demo2/demo2.component.ts","./src/app/demo3.service.ts","./src/app/demo3/demo3.component.ts","./src/app/demo3/demo3.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/demo2service.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EmployeeDataService, EmployeeRecords } from '../employee-data.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private empsrv:EmployeeDataService) { \n    this.initiate()\n  }\n  data:EmployeeRecords[] = [  ]\n  ngOnInit(): void {\n  }\n   initiate(){\n     this.data = this.empsrv.loadData()\n  \n   }\n}\n","<p>employee works!</p>\n{{data | json}}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n//httpclient \n\n\nexport interface EmployeeRecords {\n  \n  \"Name\":string,\n  \"Id\":Number,\n  \"Role\":String\n\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeDataService {\n//dependancy injection\n  constructor(private httpsrv : HttpClient) { }\ndata:EmployeeRecords[] = []\n  \n    loadData() {\n      let link:string=\"http://localhost:4200/assets/Employee.json\";\n      this.httpsrv.get(link).subscribe((Response)=>{\n      console.log(Response)\n       this.data.push(<EmployeeRecords> Response)\n      }\n    )\n    return this.data;\n  }\n}\n","<p>demo2 works!</p>\n<table class=\"table\">\n    <thead>\n        <th>ID</th>\n        <th>Name</th>\n        <th>HTML URL</th>\n        <TH>GIT URL</TH>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let entry of data;\">\n<td>{{entry.id}}</td>\n<td>{{entry.name}}</td>\n<td>{{entry.html_url}}</td>\n<td>{{entry.git_url}}</td>\n\n\n        </tr>\n    </tbody>\n</table>\n<button (click)=\"method()\">click</button>\n<input type=\"text\">\n<!-- {{data|json}} -->","import { Component, OnInit } from '@angular/core';\nimport { Demo2serviceService } from '../demo2service.service';\nimport { repos } from '../../assets/repos';\n\n@Component({\n  selector: 'app-demo2',\n  templateUrl: './demo2.component.html',\n  styleUrls: ['./demo2.component.css']\n})\nexport class Demo2Component implements OnInit {\n\n  constructor(private  demo:Demo2serviceService) { }\ndata:repos[] = []\n  ngOnInit(): void {\n    console.log(\"ngonit called\")\n    this.intiate()\n  }\n  ngOnChanges(){\n    console.log(\"ngonchange called \")\n  }\n  ngDoCheck()\t\n{\n  console.log(\"ngdocheck called \")\n}\nngAfterContentInit()\t\n{\n  console.log(\"ngafter called \") \n}\nmsg:String = \"\";\nmethod(){\nreturn this.msg = \"button called\";\n}\n  public intiate() {\n    return this.demo.fetchData().subscribe(\n      (response) =>{\n      this.data = response;\n  }\n)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Demo3Service {\n\n  constructor(private demo : HttpClient) { }\n\n  readData() : Observable<any> {\n    let link:string=\"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD,JPY,EUR\";\n    return this.demo.get(link)\n\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Demo3Service } from '../demo3.service'\nimport { crpto } from '../../assets/crpto';\n\n@Component({\n  selector: 'app-demo3',\n  templateUrl: './demo3.component.html',\n  styleUrls: ['./demo3.component.css']\n})\nexport class Demo3Component implements OnInit {\n\n  constructor(private  demo:Demo3Service) { }\n  data:Crypto[] = []\n  ngOnInit(): void {\n    this.intiate()\n  }\n  public intiate() {\n    return this.demo.readData().subscribe(\n      (response) =>{\n      this.data = response;\n  }\n)\n  }\n}\n","<!-- <p>demo3 works!</p>\n<table class=\"table\">\n    \n\n\n<div *ngFor = \"let value of data;\"></div>\n{{value.USD}}\n</table> -->\n\n{{data | json}}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'project';\n}\n","//<app-employee></app-employee>\r\n<app-demo2></app-demo2>\r\n<app-demo3></app-demo3>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Demo2Component } from './demo2/demo2.component';\nimport { Demo3Component } from './demo3/demo3.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    Demo2Component,\n    Demo3Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { repos } from '../assets/repos';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class Demo2serviceService {\n\n  constructor(private demo : HttpClient) { }\n   \n  fetchData() : Observable<any> {\n    let link:string=\"https://api.github.com/users/adilfazal8486/repos\";\n    return this.demo.get(link)\n\n}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}